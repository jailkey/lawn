@import "../config";

@include button-selector(){
	background-color:  button-color(primary, background);
	padding: pxToRem($standard-button-padding-top-bottom) pxToRem($standard-button-padding-left-right);
	color:  button-color(primary, font);
	font-size: pxToRem($standard-font-size);
	line-height: pxToRem($standard-line-height);
	cursor: pointer;
	transition: background-color 0.3s ease-in-out,  transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
	position: relative;
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	overflow: hidden;
	display: inline-block;
	z-index:1;
	vertical-align: text-bottom;
	box-sizing: content-box;
	max-height: pxToRem($standard-line-height);
	text-decoration: none;
	border-radius: pxToRem($button-rounded-corners);

	transform: scale3d(1, 1, 1);
	@if $button-shadows == on {
		@include depth(1);
	}
	@include user-select(none);
	-mold-ripple : button;
}


@include button-selector(){
	&:not([state="disabled"]):not([state="loading"]):not([state="selected"]):hover{
		background-color: button-color(primary, hover);
		@if $button-shadows == on {
			@include depth(2);
		}
	}
}



@include button-selector(){
	&[state="selected"]{
		background-color: button-color(primary, select);
		box-shadow: inset 0 (-$button-selected-underline) 0px button-color(primary, background);
		color: rgba(button-color(primary, font), 0.9);
	}
}


@include button-selector(){
	&:disabled,
	&[disabled],
	&[state="loading"]{
		color: rgba(button-color(primary, font), 0.3);
		background-color:  rgba(button-color(primary, background), 0.7);
	}
}



@include button-property("big-size"){
	line-height: pxToRem($big-line-height);
	max-height: pxToRem($big-line-height);
	padding: pxToRem($big-button-padding-top-bottom) pxToRem($big-button-padding-left-right);
}

@include button-property("medium-size"){
	line-height: pxToRem($medium-line-height);
	max-height: pxToRem($medium-line-height);
	padding: pxToRem($medium-button-padding-top-bottom) pxToRem($medium-button-padding-left-right);
}

@include button-property("small-size"){
	line-height: pxToRem($small-line-height);
	max-height: pxToRem($small-line-height);
	padding: pxToRem($small-button-padding-top-bottom) pxToRem($small-button-padding-left-right);
}


@include button-property("round-shapes"){
	border-radius:100%;
	height: pxToRem($standard-icon-size);
	width: pxToRem($standard-icon-size);
	padding: pxToRem($standard-button-padding-top-bottom);
}

@include button-property("round-shapes"){
	&[has~="big-size"]{
		height: pxToRem($big-icon-size);
		width: pxToRem($big-icon-size);
		padding: pxToRem($big-button-padding-top-bottom);
	}
}

@include button-property("round-shapes"){
	&[has~="medium-size"]{
		height: pxToRem($medium-icon-size);
		width: pxToRem($medium-icon-size);
		padding: pxToRem($medium-button-padding-top-bottom);
	}
}

@include button-property("round-shapes"){
	&[has~="small-size"]{
		height: pxToRem($small-icon-size);
		width: pxToRem($small-icon-size);
		padding: pxToRem($small-button-padding-top-bottom);
	}
}


@include button-selector(){
	&:before{
		margin-right: 0.5em;
	}
}


.ripple-helper{
	background:  button-color(primary, active);
	display: block;
	width: pxToRem(20px);
	height: pxToRem(20px);
	border-radius: pxToRem(20px);
	top: 0;
	left: 0;
	transform: scale3d(1, 1, 1);
	position: absolute;
	opacity : 0;
	z-index: -1;
}


//button bars
[is="option-bar"],
[is="button-bar"]{
	text-align: right;
	font-size: 0;
}

[is="option-bar"][has~="full-width-buttons"],
[is="button-bar"][has~="full-width-buttons"]{
	display: flex;
	flex-direction: row;
	-webkit-flex-direction: row;
}

[is="option-bar"][has~="full-width-buttons"] [is="button"],
[is="button-bar"][has~="full-width-buttons"] [is="button"]{
	display: inline-flex;
	-webkit-flex-grow: 1;
	flex-grow: 1;
}

[is="button-bar"] > [is="option-bar"],
[is="button-bar"] > [is="button-bar"]{
	display: inline-block;
}

[is="option-bar"][has~="left-align"],
[is="button-bar"][has~="left-align"]{
	text-align: left;
}

[is="button-bar"] > [is="option-bar"][has~="left-align"],
[is="button-bar"] > [is="button-bar"][has~="left-align"]{
	float: left;
}

[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(2),
[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(2) ~ [is="option-bar"],
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(2),
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(2) ~ [is="button-bar"] {
	width: 50%;
}

[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(2),
[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(2) ~ [is="button-bar"] > [is="option-bar"],
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(2),
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(2) ~ [is="button-bar"] > [is="button-bar"]{
	text-align:left;
}

[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(3),
[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(3) ~ [is="option-bar"],
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(3),
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(3) ~ [is="button-bar"] {
	width: 33.33%;
}

[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(3) ~ [is="option-bar"],
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(3) ~ [is="button-bar"]{
	text-align:center;
}

[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(3) ~ [is="option-bar"]:last-child,
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(3) ~ [is="button-bar"]:last-child{
	text-align:right;
}

[is="button-bar"] > [is="option-bar"]:first-child:nth-last-child(3),
[is="button-bar"] > [is="button-bar"]:first-child:nth-last-child(3){
	text-align:left;
}

//seperator
[is="button-bar"][has~="seperator"] > {
	@include button-selector(){
		border-right: pxToRem($button-seperator-width) solid #ffffff;

		&:last-child{
			border-right: none;
		}
	}
}

	
	


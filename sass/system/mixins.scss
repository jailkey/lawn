@import "functions.scss";

@mixin user-select($value){
	-webkit-user-select: $value;
    -moz-user-select: $value;
    -ms-user-select: $value;
    user-select: $value;
}


@mixin animation($value){
	-webkit-animation: $value;
	animation: $value;
}

@mixin keyframes($name){
	@keyframes #{$name} {
		@content;
	}

	@-webkit-keyframes #{$name}{
		@content;
	}
}

@mixin button-selector($selctors...){
	$all: ();
	@for $i from 1 through length($selectors) {
		 $all : append($all, '[is="button"]' + nth($selectors, $i), comma);
		 $all : append($all, '[role="button"]' + nth($selectors, $i), comma);
		 $all : append($all, '[role="button"]' + nth($selectors, $i), comma);
	}
	#{join($all)} {
		@content

	}
}


//from: https://css-tricks.com/snippets/sass/material-shadows-mixin/
@mixin depth($depth) {
	@if $depth < 1 {
		box-shadow: none;
	} @else if $depth > 5 {
		@warn "Invalid $depth `#{$depth}` for mixin `card`.";
	} @else {
		box-shadow: bottom-shadow($depth), top-shadow($depth);  
	}
}

@mixin spinner-size($size){
	height: pxToRem($size);
	width: pxToRem($size);
	border-width:  pxToRem($size / 4);
	margin-left: pxToRem(- ($size + 2 * $size / 4) / 2);
	margin-top: pxToRem(- ($size + 2 * $size / 4) / 2);
}

@mixin flex-direction($direction){
	-webkit-flex-direction: $direction;
	-ms-flex-direction: $direction;
	flex-direction: $direction;
}

@mixin flex-grow($grow){
	-webkit-flex-grow: $grow;
	-ms-flex-grow: $grow;
	flex-grow: $grow;
}

@mixin flex-wrap($wrap){
	-webkit-flex-grow: $wrap;
	-ms-flex-grow: $wrap;
	flex-wrap: $wrap;
}


@mixin button-selector(){
	button,
	[role=button],
	[type="button"],
	[type="submit"],
	[type="reset"],
	[is="button"]{
		@content;
	}
}

@mixin button-property($selector){
	@include button-selector(){
		&[has~="#{$selector}"]{
			@content;
		}
	}
}

@mixin button-property-disabled($selector){
	button:disabled[has~="#{$selector}"],
	button[disabled][has~="#{$selector}"],
	button[state="loading"][has~="#{$selector}"],
	[role="button"]:disabled[has~="#{$selector}"],
	[role="button"][disabled][has~="#{$selector}"],
	[role="button"][state="loading"][has~="#{$selector}"],
	[is="button"]:disabled[has~="#{$selector}"],
	[is="button"][disabled][has~="#{$selector}"],
	[is="button"][state="loading"][has~="#{$selector}"]{
		@content;
	}
}


@mixin button-property-hover($selector){
	button[has~="#{$selector}"]:not([state="disabled"]):not([state="loading"]):not([state="selected"]):hover,
	[role=button][has~="#{$selector}"]:not([state="disabled"]):not([state="loading"]):not([state="selected"]):hover,
	[is="button"][has~="#{$selector}"]:not([state="disabled"]):not([state="loading"]):not([state="selected"]):hover{
		@content;
	}
}